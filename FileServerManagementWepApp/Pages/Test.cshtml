@page
@model FileServerManagementWepApp.Pages.TestModel
@{
}

<div class="text-center">
    <div class="form-group">
        <label for="file" class="control-label">فایل</label>
        <input type="hidden" name="filename" id="filename" />
        <input class="form-control" type="file" name="file" id="file" />
    </div>
    <div class="form-group">
        <input type="button" onClick="fileUpload1()" value="آپلود" class="btn btn-primary btn-block" />
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="progressbarModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">در حال بارگذاری</h5>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    تا ظاهر شدن دکمه بستن منتظر بمانید، فایل های حجیم پس از آپلود 100% زمانی برای انتقال در سرور نیاز دارند
                </div>
                <div class="progress">
                    <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuemin="0" aria-valuemax="100"><i>0%</i></div>
                </div>
            </div>
            <a href="./" id="btnReleaseAll" class="d-none btn btn-primary btn-default btn-small">بستن &times;</a>
        </div>
    </div>
</div>
<!-- Modal -->

<a onclick="fileDownload(1,1,1)">hello</a>

<script>
    //Errors Number
    //Code = "1"  , Msg = "Empty/Invalid File Type!" }
    //Code = "2"  , Msg = "Empty/Invalid System!"
    //Code = "3"  , Msg = "Empty/Invalid SubSystem!"
    //Code = "4"  , Msg = "Zero byte file!"
    //Code = "5"  , Msg = "No server Active!"
    //Code = "6"  , Msg = "No space available!"
    //Code = "7"  , Msg = "OK!"
    //Code = "8"  , Msg =  e.Message
    //Code = "9"  , Msg = "ManageServer not response"
    //Code = "10" , Msg = "File not exist"
    //Code = "11" , Msg = "File not active"
    //Code = "12" , Msg = "File is deleted"

    //ajax #1 inputs
    var ManagerServerAddress = "192.168.10.247:5000";   //Remote Server Address
    var system;
    var subsystem;
    var ext;
    var size = 0;
    var record = 0;

    //bullshit
    var serverAddress = "";
    var fileId = "";
    var formData = new FormData();

    //ajax #1
    function fileUpload1() {

        //preset
        serverAddress = "";

        //manual
        system = 1;     //System_Id
        subsystem = 1;  //SubSystem_Id
        record = 1;     //Record

        //auto
        size = ($('#file')[0].files[0].size);
        const lastDot = $('#file')[0].files[0].name.lastIndexOf('.');
        ext = $('#file')[0].files[0].name.substring(lastDot + 1);

        //Zero byte file
        if (size == 0) {
            alert("zero byte file");
            return;
        }

        //ajax to ManageServer to get upload server address
        $.ajax({
            url: 'http://' + ManagerServerAddress + '/api/server',
            type: 'GET',
            data: {
                system: system,
                subsystem: subsystem,
                ext: ext,
                size: size,
                record: record
            },
            success: function (data) {
                console.log(data);
                if (data.data.server == null) {
                    alert("Code: " + data.data.code + " - Message: " + data.data.msg);
                    return;
                }
                serverAddress = data.data.server;
                fileId = data.data.id;
            },
            error: function (request, status, error) {
                alert("Error - Manager server did not response");
                return;
            },
            complete: function () {
                fileUpload2();
            }
        });
    }

    //ajax #2
    function fileUpload2() {
        if (serverAddress == "") {
            return;
        }

        $('#progressbarModal').modal({ backdrop: 'static', keyboard: false });

        formData.append('file', $('#file')[0].files[0]);
        formData.append('id', fileId);

        $.ajax({
            xhr: function () {
                var xhr = new window.XMLHttpRequest();

                xhr.upload.addEventListener("progress", function (evt) {
                    if (evt.lengthComputable) {
                        var percentComplete = evt.loaded / evt.total;
                        percentComplete = parseInt(percentComplete * 100);
                        $('.progress-bar').width(percentComplete + '%');
                        $('.progress-bar > i').html(percentComplete + '%');
                    }
                }, false);

                return xhr;
            },
            url: 'http://' + serverAddress + '/api/file/upload',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (data) {
                if (data.data.code != "7") {
                    alert("Code: " + data.data.code + " - Message: " + data.data.msg);
                    return;
                }
                $('#btnReleaseAll').toggleClass('d-none');
            },
            error: function (request, status, error) {
                alert("Error - Server did not response");
                return;
            }
        });
    }

    //ajax Download
    function fileDownload(sy,su,re) {

        //Empty parameters
        if (sy == null || su == null || re == null) {
            alert("Empty/Invalid Parameters");
            return;
        }

        $.ajax({
            url: 'http://' + ManagerServerAddress + '/api/download',
            type: 'GET',
            data: {
                system: sy,
                subsystem: su,
                record: re
            },
            success: function (data) {
                console.log(data);
                debugger;
                fetch('http://' + data.data.server + '/api/file/download/' + data.data.name)
                    .then(resp => resp.blob())
                    .then(blob => {
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.style.display = 'none';
                        a.href = url;
                        a.download = data.data.name;
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                    })
                    .catch(() => alert("Error - Server did not response"));
            },
            error: function (request, status, error) {
                alert("Error - Manager server did not response");
                return;
            },
            complete: function () {
            }
        });
    }
</script>
